/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NaturalLanguagePhase.java
 *
 * Created on Feb 4, 2017, 9:57:14 PM
 */
package pt.ui;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import pt.auth.DataOperations;
import pt.logic.CorrectSentence;
import pt.logic.POSTaggerClass;
import pt.logic.Sentense;
import pt.logic.StopWordsProvider;
import pt.logic.TermDocumentMatrix;
import pt.logic.slist;
import pt.spellchecker.SpellCheckerTool;

/**
 *
 * @author Administrator
 */
public class NaturalLanguagePhase extends javax.swing.JFrame {

    ArrayList students;
    DataOperations dop;
    ArrayList<String> scores;
    CorrectSentence cs;
    SpellCheckerTool sct;
    double weight;
    static double maxscore;
    double score;
    TermDocumentMatrix tdm;
    static StringBuilder contents,cleandata,poscontents;
    ArrayList als;
    String studentid;
    double scnt;
POSTaggerClass pos;

    /** Creates new form NaturalLanguagePhase */
    public NaturalLanguagePhase() {
        initComponents();
        maxscore=50;
        score+=10; //for relevance of essay writing which we tested from posting itself
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtCount = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOp = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(essayscoringtool.EssayScoringToolApp.class).getContext().getResourceMap(NaturalLanguagePhase.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBounds(new java.awt.Rectangle(200, 100, 0, 0));
        setName("Form"); // NOI18N
        setResizable(false);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jComboBox1.setFont(resourceMap.getFont("jComboBox1.font")); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Class-V", "Class-VI", "Class-VII", "Class-VIII", "Class-IX", "Class-X", "Class-XI", "Class-XII" }));
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        txtCount.setFont(resourceMap.getFont("txtCount.font")); // NOI18N
        txtCount.setText(resourceMap.getString("txtCount.text")); // NOI18N
        txtCount.setName("txtCount"); // NOI18N

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton11.setFont(resourceMap.getFont("jButton11.font")); // NOI18N
        jButton11.setText(resourceMap.getString("jButton11.text")); // NOI18N
        jButton11.setName("jButton11"); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtCount, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setName("jPanel2"); // NOI18N

        jButton3.setFont(resourceMap.getFont("jButton3.font")); // NOI18N
        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(resourceMap.getFont("jButton4.font")); // NOI18N
        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jButton4AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jButton5.setFont(resourceMap.getFont("jButton5.font")); // NOI18N
        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(resourceMap.getFont("jButton6.font")); // NOI18N
        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(resourceMap.getFont("jButton7.font")); // NOI18N
        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(resourceMap.getFont("jButton8.font")); // NOI18N
        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setFont(resourceMap.getFont("jButton10.font")); // NOI18N
        jButton10.setText(resourceMap.getString("jButton10.text")); // NOI18N
        jButton10.setName("jButton10"); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtOp.setColumns(20);
        txtOp.setEditable(false);
        txtOp.setFont(resourceMap.getFont("txtOp.font")); // NOI18N
        txtOp.setLineWrap(true);
        txtOp.setRows(5);
        txtOp.setWrapStyleWord(true);
        txtOp.setName("txtOp"); // NOI18N
        jScrollPane1.setViewportView(txtOp);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(306, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(227, 227, 227))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     private String removeStopChars(String term){
        String[] stopChars = {".",",",":",";","-","?","!","<",">"};

	for(String sc:stopChars){
		if(term.contains(sc)){
			term = term.replace(sc,"");
		}
	}
	return term;
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        StringBuilder matrix;
        tdm=new TermDocumentMatrix();
        tdm.addTerms(studentid,cleandata);
        matrix=tdm.createMatrix(cleandata);
        txtOp.setText(" \t\t Document Term Matrix Creation For The Essay \r\n");
        txtOp.append(matrix.toString());
        weight=tdm.getWeight(tdm.getMatrix(),2);
        txtOp.append("Weight Of Essay is " + weight);
        score+=Math.round(weight); //for bag of words concept 
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        separatesentense(contents);
    }//GEN-LAST:event_jButton4ActionPerformed

    
        private void separatesentense1(StringBuilder sb)
 {	

     als=new ArrayList();
	Sentense sc=new Sentense(sb.toString());
	sc.separatesentense(als);									         		
	cleandata=new StringBuilder();
        poscontents=new StringBuilder();
        txtOp.setText("");
txtOp.append("\r\nNO OF SENTENSES :"+als.size() + "\r\n");
	scnt=als.size();
	for(int i=0;i<als.size();i++)
	 {	  
	   slist sl=(slist)als.get(i);  	 
           txtOp.append("\n " + (i+1) +":  ");
           for(String sub : sl.getrawsentense().split(" "))
           {
               sub=removeStopChars(sub);
               if(!StopWordsProvider.getInstance().contains(sub.trim()))
               {
                   cleandata.append(sub + " ");
                   poscontents.append(sub + " ");
                    txtOp.append(sub + " ");
               }
           }
           poscontents.append("\n");
	 }	
        txtOp.append("\r\n");
 }


    
    private void separatesentense(StringBuilder sb)
 {	

     als=new ArrayList();
	Sentense sc=new Sentense(sb.toString());
	sc.separatesentense(als);									         		
	txtOp.setText("");	
txtOp.setText("NO OF SENTENSE :"+als.size() +"\n\n");
	scnt=als.size();
	for(int i=0;i<als.size();i++)
	 {	  
	   slist sl=(slist)als.get(i);  	 
	   txtOp.setText( txtOp.getText() + "\n " + (i+1) +":  " + sl.getrawsentense());
	 }		
 }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        StringBuilder matrix;
        ArrayList nfeatures;
        tdm=new TermDocumentMatrix();
        nfeatures=tdm.getStats(cleandata,als.size());
        txtOp.setText(" \t\t Numerical Features For The Essay \r\n");
        txtOp.append("Total Sentences Are : " + nfeatures.get(0).toString().split(",")[0] + "\r\n");
        txtOp.append("Total Word Count  Are : " + nfeatures.get(0).toString().split(",")[1] + "\r\n");
        txtOp.append("Average Word Length  : " + nfeatures.get(0).toString().split(",")[2] + "\r\n");
        
        int sentences=Integer.parseInt(nfeatures.get(0).toString().split(",")[0]);
        int wordcount=Integer.parseInt(nfeatures.get(0).toString().split(",")[1]);
        double wlength=Double.parseDouble(nfeatures.get(0).toString().split(",")[1]);
        
       if(sentences>10 && wordcount>=60 && wlength>7.0)
           score+=8;
       else
       if(sentences<10 && wordcount<60 && wlength<5.0)    
           score+=5;
       else
           score+=3;
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        ArrayList<String> speech;
        int maxlines;
        int correctlines;
        String myformedrules="";
        try
        {
            txtOp.setText("\t\t POS Tagger For the Essay \r\n");
            
            maxlines=als.size();
            correctlines=1;
  //pos=new POSTaggerClass(poscontents);
            
            System.out.println(als.size() + " is total sentences ");
            StringBuilder dump;
            for(int ix=0;ix<als.size();ix++)
            {
            //pos=new POSTaggerClass(contents);
                dump=new StringBuilder(((slist)als.get(ix)).getrawsentense());
                pos=new POSTaggerClass(dump);
            speech=pos.process();
            for(int i=0;i<speech.size();i++)
            {
                myformedrules+=speech.get(i).toString().substring(speech.get(i).toString().indexOf(":")+1) +",";
               txtOp.append(speech.get(i).toString() + "\r\n");
            }
            myformedrules=myformedrules.substring(0,myformedrules.length()-1);
            
             txtOp.append("\r\n Grammer Rules Formed for the Statement is " + myformedrules);
            cs=new CorrectSentence();
            if(cs.isCorrectStatement(myformedrules)==true)
                 correctlines++;
            } //end of for all sentences 
            if(correctlines>maxlines)
                correctlines=maxlines;
            double prob=((double)correctlines/maxlines) * 100;
            System.out.println("Correct senteces " + correctlines + "----" + prob);
            if(prob>=75)
                 score+=8;
            else
                if(prob>=50)
                    score+=5;
            else
                    if(prob>=30)
                        score+=3;
            else
                        score+=1;
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error in POS TAGGER ");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try
        {
            int totalwords;
            int misspellwords;
          //check spellings now for the sentences 
            sct=new SpellCheckerTool();
            String result="";
            totalwords=misspellwords=0;
            for(int i=0;i<als.size();i++)
            {
                sct.getBest(((slist)als.get(i)).getrawsentense());
                result=sct.getCount();
                misspellwords+=Integer.parseInt(result.split("#")[0]);
                totalwords+=Integer.parseInt(result.split("#")[1]);
            }
            double prob=((double)misspellwords/totalwords) * 100;
            System.out.println("Spellchecking "+ "----" + prob + "---" + totalwords + "---" + misspellwords);
            if(prob>=75)
                 score+=1;
            else
                if(prob>=50)
                    score+=3;
            else
                    if(prob>=30)
                        score+=5;
            else
                        score+=6;
            
            JOptionPane.showMessageDialog(this,"Spelling Checking Done For All Statements ");
        }
        catch(Exception ex)
        {
           JOptionPane.showMessageDialog(this,"Error in Spell Checker Tagger ");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        try
        {
            JOptionPane.showMessageDialog(this,"Score For Student " + studentid + " Is " + score + " Out of " + maxscore);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error In Getting Score For Essay ");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        try
        {
            txtCount.setText(new DataOperations().getCount(jComboBox1.getSelectedItem().toString())+"");
            if(!txtCount.getText().trim().equals("0"))
                students=new DataOperations().getStudents(jComboBox1.getSelectedItem().toString());
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error  : " + ex.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            if(students.size()==0)
                throw new Exception("No Sample Test is Yet Uploaded");
            
            if(students.size()==1)
            {
                studentid=students.get(0).toString();
                   JOptionPane.showMessageDialog(this,"Testing Essay of Sample For Student " + studentid);
                txtOp.setText("\t\t Essay Contents Submitted By Student \r\n");
                contents=new StringBuilder(new DataOperations().getEssayBody(studentid, jComboBox1.getSelectedItem().toString()));
                txtOp.append(contents.toString());
            }
            else
            {
                Random r=new Random();
                studentid=students.get(r.nextInt(students.size())).toString();
                
                JOptionPane.showMessageDialog(this,"Testing Essay of Sample For Student " + studentid);
                txtOp.setText("\t\t Essay Contents Submitted By Student \r\n");
                contents=new StringBuilder(new DataOperations().getEssayBody(studentid, jComboBox1.getSelectedItem().toString()));
                txtOp.append(contents.toString());
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error "+  ex.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,"Closing This Phase Right Now ");
        this.dispose();
        MenuFrame mf=new MenuFrame();
        mf.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        separatesentense1(contents);  
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        StringBuilder matrix;ArrayList nfeatures;
        ArrayList<String> speech;
        int maxlines;
        int correctlines;
        String myformedrules="";
                    StringBuilder dump;
                    int totalwords;
            int misspellwords;
            scores=new ArrayList<String>();
        try
        {
            //evaluate all the students essay and store grading for them
            if(students.size()==0)
                throw new Exception("No Sample Test is Yet Uploaded");
            
            for(int i=0;i<students.size();i++)
            {
                studentid=students.get(i).toString(); //get student by student
                contents=new StringBuilder(new DataOperations().getEssayBody(studentid, jComboBox1.getSelectedItem().toString()));
                separatesentense(contents);
                separatesentense1(contents); 
                
//bag of words                
        tdm=new TermDocumentMatrix();
        tdm.addTerms(studentid,cleandata);
        matrix=tdm.createMatrix(cleandata);
        weight=tdm.getWeight(tdm.getMatrix(),2);
        score+=Math.round(weight); //for bag of words concept 

        //numerical features
        nfeatures=tdm.getStats(cleandata,als.size());
        int sentences=Integer.parseInt(nfeatures.get(0).toString().split(",")[0]);
        int wordcount=Integer.parseInt(nfeatures.get(0).toString().split(",")[1]);
        double wlength=Double.parseDouble(nfeatures.get(0).toString().split(",")[1]);
        
       if(sentences>10 && wordcount>=60 && wlength>7.0)
           score+=8;
       else
       if(sentences<10 && wordcount<60 && wlength<5.0)    
           score+=5;
       else
           score+=3;
       
       //speech valuation 
       maxlines=als.size();
            correctlines=1;
  //pos=new POSTaggerClass(poscontents);

            for(int ix=0;ix<als.size();ix++)
            {
            //pos=new POSTaggerClass(contents);
                dump=new StringBuilder(((slist)als.get(ix)).getrawsentense());
                pos=new POSTaggerClass(dump);
            speech=pos.process();
            for(int iy=0;iy<speech.size();iy++)
            {
                myformedrules+=speech.get(iy).toString().substring(speech.get(iy).toString().indexOf(":")+1) +",";
               //txtOp.append(speech.get(iy).toString() + "\r\n");
            }
            myformedrules=myformedrules.substring(0,myformedrules.length()-1);
             //txtOp.append("\r\n Grammer Rules Formed for the Statement is " + myformedrules);
            cs=new CorrectSentence();
            if(cs.isCorrectStatement(myformedrules)==true)
                 correctlines++;
            } //end of for all sentences 
            
            if(correctlines>maxlines)
                correctlines=maxlines;
            double prob=((double)correctlines/maxlines) * 100;
            System.out.println("Correct senteces " + correctlines + "----" + prob);
            if(prob>=75)
                 score+=8;
            else
                if(prob>=50)
                    score+=5;
            else
                    if(prob>=30)
                        score+=3;
            else
                        score+=1;
       
            
            //spell checker goes here
            sct=new SpellCheckerTool();
            String result="";
            totalwords=misspellwords=0;
            for(int ix=0;ix<als.size();ix++)
            {
                sct.getBest(((slist)als.get(ix)).getrawsentense());
                result=sct.getCount();
                misspellwords+=Integer.parseInt(result.split("#")[0]);
                totalwords+=Integer.parseInt(result.split("#")[1]);
            }
            prob=((double)misspellwords/totalwords) * 100;
            //System.out.println("Spellchecking "+ "----" + prob + "---" + totalwords + "---" + misspellwords);
            if(prob>=75)
                 score+=1;
            else
                if(prob>=50)
                    score+=3;
            else
                    if(prob>=30)
                        score+=5;
            else
                        score+=6;
            
            JOptionPane.showMessageDialog(this,"Student {" + studentid + "} Gots Score of { " + score + " Out of " + maxscore + "}");
            scores.add(studentid + "," + score);
            } //end of for students iteration
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error : " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jButton4AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4AncestorAdded

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try
        {
            dop=new DataOperations();
            dop.saveScores(scores,jComboBox1.getSelectedItem().toString());
            JOptionPane.showMessageDialog(this,"Scores Saved Successfully ");
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error In Saving Scores ");
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NaturalLanguagePhase().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextArea txtOp;
    // End of variables declaration//GEN-END:variables
}
